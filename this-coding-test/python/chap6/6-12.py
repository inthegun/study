# 두 배열의 원소 교체
'''
N 개의 원소를 가진 배열 A , B
K번의 바꿔치기 가능
배열 A의 모든 원소의 합이 최대값
input
5 3
1 2 5 4 3
5 5 6 6 5
output 26
기본 아이디어 매번 배열A에서 가장 작은 원소를 골라서 , 배열 B에서 가장 큰 원소가 교체하는것
단 배열 A에서 가장 작은 원소가 배열 B에서 가장 큰 원소보다 작을때에만 교체 수행
이런한 과정 K번 반복
A는 오름차순 정렬
B는 내림차순 정렬
두 배열의 원소를 첫번째 인덱스부터 차례대로 비교하면서 A의 원소가 B의 원소보다 작을때에만 교체 수행 
정렬 알고리즘 이용 O(NlogN)
'''
n , k = map(int , input().split()) # N , K 를 입력받기
a = list(map(int,input().split())) # 배열 A의 모든 원소를 입력받기
b = list(map(int,input().split())) # 배열 B의 모든 원소를 입력받기

a.sort() # 배열 A는 오름차순 정렬 수행
b.sort(reverse=True) # 배열 B는 내림차순 정렬 수행

# 첫번째 인덱스부터 확인하며 , 두 배열의 원소를 최대 K번 비교
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        # 두 원소를 교체
        a[i], b[i] = b[i] , a[i]
    else: # A의 원소가 B의 원소보다 크거나 같을때, 반복문을 탈출
        break

print(sum(a)) # 배열 A의 모든 원소의 합을 출력